---
message: "This node is using global data"

#Puppet Server Tuning
puppet_enterprise::master::puppetserver::jruby_max_requests_per_instance: 10000
#Enable code manager
puppet_enterprise::profile::master::code_manager_auto_configure: true
puppet_enterprise::master::code_manager::authenticate_webhook: false

#pe-console-services tuning
#https://docs.puppetlabs.com/pe/latest/console_config.html#tuning-the-classifier-synchronization-period
#disable classifier scheduled sync and rely on r10k postrun command to sync the classes
puppet_enterprise::profile::console::classifier_synchronization_period: 0

# Data for the puppetlabs NTP module
#   which interfaces will accept connections
ntp::restrict:
  - 'default kod nomodify notrap nopeer noquery'
  - '-4 default kod notrap nomodify nopeer noquery'
  - '-6 default kod nomodify notrap nopeer noquery'
  - '127.0.0.1'
  - '::1'
ntp::servers:
  - 'time01.samdom.aussieswithtails.fuzzbutt' # ToDo: use fqdn?

virtualbox::version: '5.0'

hiera::hiera_yaml: '/etc/puppetlabs/code/hiera.yaml' # FixMe - can it be paramaratized
hiera::master_service: 'puppetserver'
hiera::hierarchy:
  - "nodes/%{literal('%')}{trusted.certname}"
  - "tier/%{literal('%')}{tier}"
  - global

awt::ssh::key_type: 'rsa'
awt::ssh::key_size: '4096'

awt::puppet::server: 'oberon.samdom.aussieswithtails.fuzzbutt'

# btrfs
awt::btrfs::admin_mountpoint: '/mnt/btrfs'
awt::server_home: '/srv'
awt::nologin_shell: '/usr/sbin/nologin'

# Gitolite settings
# Note that we don't let gitolite manage the user or home directory
# This reflects two issues:
# - The need to setup a btrfs subvolume
# - The puppet mount resource behavior which doesn't respect the underlying
#   directory ownerships - changes them to root which requires a hack to
#   work around.
#gitolite::admin_key_source: "%{hiera('gitolite::home_dir')}/.ssh/id_%{hiera('awt::ssh::key_type')}.pub"
#gitolite::admin_key_source: "/home/administrator/.ssh/id_rsa.pub"
awt::user::administrator:
  user: 'administrator'
  group: 'administrator'

awt::user::snesbitt:
  ssh_key_content: 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA0fSQTmZM1YiWAYIVfS5vgrGwst9SGQMcDMheKlrar2wW7Y262JDQWgf8FCZjn4t4FG2L6z4VFNKLRg2UIwmh2uT3p9+sul0oyWrVeukYUrslZl5wrZxpuy1OgVJSeoATmB0JTzIIPu+eQDsCDNthUH+cGTBDKkhquRvmBo/jZ4CPEpqANh6wWpQJQUPIzoCiS+mBtl+0dI2BReFr/SVH9ebZ3vmc+vBZppqz7EqHdeL8psgqGkFA+YNYN0qDKSdU4mWgOkvsTDCWGkeAq4Yn8Kir0mntYE4lFcSFOflLJLgX9k3m9RVy2O4tsCujtX6fKWC/zi+J96Dtso56Xgoi/Q== snesbitt@loki'

gitolite::admin_key_content: "%{hiera('awt::user::snesbitt.ssh_key_content')}"
gitolite::manage_home_dir: false
gitolite::manage_user: false
gitolite::group_name: 'gitolite'
gitolite::user_name: 'gitolite'
gitolite::home_dir: '/srv/gitolite'


# Nginx
nginx::manage_repo: true
nginx::package_source: 'nginx-mainline'

# Postgresql
postgresql::globals::manage_package_repo: true
postgresql::globals::version: '9.4'

postgresql::server::ip_mask_allow_all_users: '192.168.0.0/26'
postgresql::server::listen_addresses: '*'

# PuppetDB
puppetdb::server::database_name: 'puppetdb'
puppetdb::server::database_password: 'UrAIgMaNALCHOBECia'
puppetdb::server::database_username: 'puppetdb'
puppetdb::server::service_status: 'running'

puppetdb::database::postgresql::manage_server: false

puppetdb::master::config::puppetdb_port: "18081"

puppetdb::server::listen_port: '18080'
puppetdb::server::manage_firewall: false
puppetdb::server::ssl_listen_port: '18081'

